# -*- coding: utf-8 -*-
"""FP BDDM 21.11.4133

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18Yy1-y3iABq3NB0OsNQ9tlu6BN5BnaMz

## FP BDDM
BIMA KARUNIA FAJAR SYAHPUTRA - 21.11.4133


Judul : Prediksi Harga Mobil Bekas dengan Metode KNN

Link Dataset :
https://drive.google.com/file/d/1g7C4Ho8OV5vUOrrTJDM98KjCyrrMtVR2/view?usp=sharing

## 1. Import Library yang diperlukan
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import sklearn.metrics as metrics
row_data = pd.read_csv('/content/drive/MyDrive/semester 5/BIGDATA MINING/Dataset/data mobil bekas.csv')

"""## 2. Load data harga mobil bekas di Kendari berdasarkan lokasi data"""

row_data.shape

row_data.describe

"""## 3. Bersihkan data yang tidak lengkap"""

data = row_data.dropna(axis=0)
data.describe()

print (row_data.dtypes)

"""## 4. Definisikan input output data yang menggunakan tipe data integer dan float"""

features = ['tahun', 'jarak_tempuh', 'pajak', 'mpg', 'ukuran_mesin']
x = data[features]
y = data['harga']
x.shape, y.shape

"""## 5. Membagi data untuk training dan validasi (test)"""

from sklearn.model_selection import train_test_split
train_x, test_x, train_y, test_y = train_test_split(x, y, random_state = 40)

test_y.shape

"""## 6. Membangun machine learning model dengan algoritma K-Nearest Neighbors"""

from sklearn.neighbors import KNeighborsRegressor as KNN_Reg
from sklearn.metrics import mean_squared_error as mse

model = KNN_Reg(n_neighbors = 40)

# training the model:
model.fit(train_x, train_y)
acc1 = model.score(test_x, test_y)

# test for prediction
test_predict = model.predict(test_x)
score = mse(test_predict, test_y)
print(' MSE: ', score, '\n', 'Accuracy: ', acc1)

"""## 7. Menggunakan Elbow method untuk menentukan nilai K terbaik"""

def Elbow(K):
  #initiating an empy list
  test_mse =[]

  #train model for every value of K
  for i in K:
    model = KNN_Reg(n_neighbors=i)
    model.fit(train_x, train_y)
    tmp = model.predict(test_x)
    tmp = mse(tmp, test_y)
    test_mse.append(tmp)

  return test_mse

"""## 8. Menampilkan grafik nilai k berdasarkan MSE"""

K = range(20, 30)
test = Elbow(K)

#plotting
plt.plot(K,test)
plt.xlabel('K Neighbors')
plt.ylabel('Mean Squared Error (MSE)')
plt.title('Elbow Curve for Test')

"""## 9. Melakukan koreksi nilai K dengan menggunakan nilai K terbaik berdasarkan hasil dari Elbow method"""

new_model = KNN_Reg(n_neighbors=28)

# Train model
new_model.fit(train_x, train_y)
acc2 = new_model.score(test_x, test_y)

# Prediction test
print(' Accuracy of new model (%):', acc2*100, '\n', 'Accuracy of old model (%):', acc1*100, '\n Improvement (%):', (acc2-acc1)*100)

"""## 10. Contoh penggunaan machine learning yang dibuat untuk memprediksi harga mobil bekas"""

row_data = np.array([[2012,12000,11300000,33,2.3]])
prediction_old = model.predict(row_data)
prediction_new = new_model.predict(row_data)
print(' Hasil Prediksi harga mobil bekas dengan old model: £', prediction_old, 'atau jika dirupiahkan yaitu: Rp', prediction_old * 19110*1e-6, 'Juta\n',
      'Hasil Prediksi harga mobil bekas dengan new model: £', prediction_new, 'atau jika dirupiahkan yaitu: Rp', prediction_new * 19110*1e-6, 'Juta')

"""Kesimpulan

Dari hasil percobaan yang telah dilakukan, maka dapat diambil kesimpulan bahwa algoritma KNN dapat diterapkan untuk prediksi harga mobil bekas dengan dengan menggunakan data tahun, jarak tempuh, pajak kendaraan, mpg, dan ukuran mesin sebagai data input. Dengan algoritma KNN, proses prediksi harga mobil bekas menjadi lebih cepat dengan memperhatikan nilai yang proporsional untuk setiap kriteria yang digunakan.
"""